@using RouteDataManager.ViewModels.Country

@model CountryIndexViewModel

@{
    ViewData["Title"] = "Index"; //Lo solicita en el prompt de creación
}

<h1>Showing all countries</h1>

<p>
    <a asp-action="Create" class="btn btn-primary rounded-0"><i class="fa fa-plus-circle"></i> Add New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                Code
            </th>
            <th>
                Name
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Countries)
        {
            string selectedRow = "";
            if (item.CountryID == ViewBag.CountryId)
            {
                selectedRow = "success";
            }

            <tr class="@selectedRow">
                <td>
                    @Html.DisplayFor(modelItem => item.Code)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>


                <td>   @Html.ActionLink("Select", "Index", new { id = item.CountryID },  new { @class = "btn btn-primary btn-block"}) </td>
                <td> <a class="btn btn-primary btn-block" asp-action="Edit" asp-route-id="@item.CountryID">Edit</a> </td>
                <td> <a class="btn btn-primary btn-block" asp-action="Details" asp-route-id="@item.CountryID">Details</a> </td>
                <td> <a class="btn btn-primary btn-block" asp-action="Delete" asp-route-id="@item.CountryID">Delete</a></td>

            </tr>
        }

    </tbody>
</table>

@if (Model.Destinations != null)
{
    <h3>
        Destinations in Selected Country
    </h3>
    <table class="table">
        <tr>
            <th>Name</th>
            <th>Description</th>       

        </tr>

        @foreach (var d in Model.Destinations)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => d.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => d.Description)
                </td>
              
            </tr>
        }

    </table>
}

@if (Model.BorderCrossings != null)
{
    <h3>
        Frontiers in Selected Country
    </h3>
    <table class="table">
        <tr>
            <th>Name</th>
            <th>Description</th>
            <th>Type</th>

        </tr>

        @foreach (var f in Model.BorderCrossings)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => f.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => f.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => f.BorderCrossingType.Description)
                </td>
            </tr>
        }

    </table>
}

@if (Model.Visas != null)
{
    <h3>
        Available Visas
    </h3>
    <table class="table">
        <tr>
            <th>Name</th>
            <th>Description</th>
            <th>URL</th>

        </tr>

        @foreach (var v in Model.Visas)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => v.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => v.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => v.URL)
                </td>
            </tr>
        }

    </table>
}